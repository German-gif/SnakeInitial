

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author victoralonso
 */
public class Board extends javax.swing.JPanel implements KeyListener {
    
    private int numRows;
    private int numCols;
    private Snake snake;
    private Food food;
    private Food specialFood;
    private Timer snakeTimer;
    private Timer specialFoodTimer;
    private int DeltaTime;
    Direction keepDirection = Direction.LEFT;

    /**
     * Creates new form Board
     */
    public Board() {
        initComponents();
        myInit();
    }
    
    private void myInit() {
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        
        this.numRows = dim.width;
        this.numCols = dim.height;
        setSize(this.numRows, this.numCols);
        addKeyListener(this);
        
        

        // Finish this method
    }
    
    public Board(int numRows, int numCols) {
        
        // Finish this method
    }
    
    public boolean colideFood() {
        // Finish this method
        return false;
    }
    
    public void gameOver() {
        // Finish this method
    }
    
    /*@Override 
    protected void paintComponent(Graphics g)  {
        super.paintComponent(g);
        snake.paint(g, this.numRows/2, this.numCols/2);
        // Finish this method
        // Paint the Snake and the food here
    }*/
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(153, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode()== KeyEvent.VK_UP) {
            if(keepDirection != Direction.DOWN) {
                keepDirection = Direction.UP;
            }
        } else if(e.getKeyCode() == KeyEvent.VK_DOWN) {
            if(keepDirection != Direction.UP) {
                keepDirection = Direction.DOWN;
            }
        }else if(e.getKeyCode() == KeyEvent.VK_LEFT) {
            if(keepDirection != Direction.RIGHT) {
                keepDirection = Direction.LEFT;
            }
        }else if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
            if(keepDirection != Direction.LEFT) {
                keepDirection = Direction.RIGHT;
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}


